<?xml version="1.0" encoding="UTF-8" ?>
<!--
    Copyright (c) 2009 AGETO Service GmbH and others.
    All rights reserved.
     
    This program and the accompanying materials are made available under the 
    terms of the Eclipse Public License v1.0 which accompanies this distribution,
    and is available at http://www.eclipse.org/legal/epl-v10.html.
    
    Contributors:
        Gunnar Wagenknecht - initial API and implementation
 -->
 
<!--
 This is the Gyrex Fanshop specific Solr index schema configuration file.
  
 For more information, on how to customize this file, please see
 http://wiki.apache.org/solr/SchemaXml
 -->
<schema name="fanshop" version="1.1">
  <types>
    <fieldType name="string" class="solr.StrField" sortMissingLast="true" omitNorms="true"/>
    <fieldType name="boolean" class="solr.BoolField" sortMissingLast="true" omitNorms="true"/>

    <fieldType name="integer" class="solr.IntField" omitNorms="true"/>
    <fieldType name="long" class="solr.LongField" omitNorms="true"/>
    <fieldType name="float" class="solr.FloatField" omitNorms="true"/>
    <fieldType name="double" class="solr.DoubleField" omitNorms="true"/>

    <fieldType name="sint" class="solr.SortableIntField" sortMissingLast="true" omitNorms="true"/>
    <fieldType name="slong" class="solr.SortableLongField" sortMissingLast="true" omitNorms="true"/>
    <fieldType name="sfloat" class="solr.SortableFloatField" sortMissingLast="true" omitNorms="true"/>
    <fieldType name="sdouble" class="solr.SortableDoubleField" sortMissingLast="true" omitNorms="true"/>

    <fieldType name="date" class="solr.DateField" sortMissingLast="true" omitNorms="true"/>
    <fieldType name="random" class="solr.RandomSortField" indexed="true" />

    <!-- A text field that only splits on whitespace for exact matching of words -->
    <fieldType name="text_ws" class="solr.TextField" positionIncrementGap="100">
      <analyzer>
        <tokenizer class="solr.WhitespaceTokenizerFactory"/>
      </analyzer>
    </fieldType>

    <!-- A text field that uses WordDelimiterFilter to enable splitting and matching of
        words on case-change, alpha numeric boundaries, and non-alphanumeric chars,
        so that a query of "wifi" or "wi fi" could match a document containing "Wi-Fi".
        Synonyms and stopwords are customized by external files, and stemming is enabled.
        Duplicate tokens at the same position (which may result from Stemmed Synonyms or
        WordDelim parts) are removed.
        -->
    <fieldType name="text" class="solr.TextField" positionIncrementGap="100">
      <analyzer type="index">
        <tokenizer class="solr.WhitespaceTokenizerFactory"/> 
        <filter class="solr.StopFilterFactory"
                ignoreCase="true"
                words="stopwords.txt"
                enablePositionIncrements="true"
                />
        <filter class="solr.WordDelimiterFilterFactory" generateWordParts="1" generateNumberParts="1" catenateWords="1" catenateNumbers="1" catenateAll="0" splitOnCaseChange="1"/>
        <filter class="solr.LowerCaseFilterFactory"/>
        <filter class="solr.EnglishPorterFilterFactory"/>
        <filter class="solr.RemoveDuplicatesTokenFilterFactory"/>
      </analyzer>
      <analyzer type="query">
        <tokenizer class="solr.WhitespaceTokenizerFactory"/>
        <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt"/>
        <filter class="solr.WordDelimiterFilterFactory" generateWordParts="1" generateNumberParts="1" catenateWords="0" catenateNumbers="0" catenateAll="0" splitOnCaseChange="1"/>
        <filter class="solr.LowerCaseFilterFactory"/>
        <filter class="solr.EnglishPorterFilterFactory"/>
        <filter class="solr.RemoveDuplicatesTokenFilterFactory"/>
      </analyzer>
    </fieldType>

    <!-- a text field which allos sub string matching
         (use with care, it can grow your index exponentially) -->
    <fieldType name="textSubMatch" class="solr.TextField" positionIncrementGap="100">
      <analyzer type="index">
        <tokenizer class="solr.WhitespaceTokenizerFactory"/> 
        <filter class="solr.StopFilterFactory"
                ignoreCase="true"
                words="stopwords.txt"
                enablePositionIncrements="true"
                />
        <filter class="solr.WordDelimiterFilterFactory" generateWordParts="1" generateNumberParts="1" catenateWords="1" catenateNumbers="1" catenateAll="0" splitOnCaseChange="1"/>
        <filter class="solr.LowerCaseFilterFactory"/>
        <filter class="solr.NGramFilterFactory" minGramSize="2" maxGramSize="8"/>
        <filter class="solr.RemoveDuplicatesTokenFilterFactory"/>
      </analyzer>
      <analyzer type="query">
        <tokenizer class="solr.WhitespaceTokenizerFactory"/>
        <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt"/>
        <filter class="solr.WordDelimiterFilterFactory" generateWordParts="1" generateNumberParts="1" catenateWords="0" catenateNumbers="0" catenateAll="0" splitOnCaseChange="1"/>
        <filter class="solr.LowerCaseFilterFactory"/>
        <filter class="solr.RemoveDuplicatesTokenFilterFactory"/>
      </analyzer>
    </fieldType>

    <!-- A text field tuned for auto completion -->
    <fieldType name="textAutocomplete" class="solr.TextField" positionIncrementGap="100">
      <analyzer type="index">
        <tokenizer class="solr.WhitespaceTokenizerFactory"/> 
        <filter class="solr.WordDelimiterFilterFactory" generateWordParts="1" generateNumberParts="1" catenateWords="1" catenateNumbers="1" catenateAll="0" splitOnCaseChange="1"/>
        <filter class="solr.LowerCaseFilterFactory"/>
        <filter class="solr.NGramFilterFactory" minGramSize="2" maxGramSize="8"/>
        <filter class="solr.RemoveDuplicatesTokenFilterFactory"/>
      </analyzer>
      <analyzer type="query">
        <tokenizer class="solr.WhitespaceTokenizerFactory"/>
        <filter class="solr.WordDelimiterFilterFactory" generateWordParts="1" generateNumberParts="1" catenateWords="0" catenateNumbers="0" catenateAll="0" splitOnCaseChange="1"/>
        <filter class="solr.LowerCaseFilterFactory"/>
        <filter class="solr.RemoveDuplicatesTokenFilterFactory"/>
      </analyzer>
    </fieldType>

    <!-- Less flexible matching, but less false matches.  Probably not ideal for product names,
         but may be good for SKUs.  Can insert dashes in the wrong place and still match. -->
    <fieldType name="textTight" class="solr.TextField" positionIncrementGap="100" >
      <analyzer>
        <tokenizer class="solr.WhitespaceTokenizerFactory"/>
        <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt"/>
        <filter class="solr.WordDelimiterFilterFactory" generateWordParts="0" generateNumberParts="0" catenateWords="1" catenateNumbers="1" catenateAll="0"/>
        <filter class="solr.LowerCaseFilterFactory"/>
        <filter class="solr.EnglishPorterFilterFactory"/>
        <filter class="solr.RemoveDuplicatesTokenFilterFactory"/>
      </analyzer>
    </fieldType>

    <fieldType name="textSpell" class="solr.TextField" positionIncrementGap="100" >
      <analyzer>
        <tokenizer class="solr.StandardTokenizerFactory"/>
        <filter class="solr.LowerCaseFilterFactory"/>
        <filter class="solr.RemoveDuplicatesTokenFilterFactory"/>
      </analyzer>
    </fieldType>

    <fieldType name="alphaOnlySort" class="solr.TextField" sortMissingLast="true" omitNorms="true">
      <analyzer>
        <tokenizer class="solr.KeywordTokenizerFactory"/>
        <filter class="solr.LowerCaseFilterFactory" />
        <filter class="solr.TrimFilterFactory" />
        <filter class="solr.PatternReplaceFilterFactory"
                pattern="([^a-z])" replacement="" replace="all"
        />
      </analyzer>
    </fieldType>

    <fieldtype name="ignored" stored="false" indexed="false" class="solr.StrField" /> 
 </types>


 <fields>
   <!-- Valid attributes for fields:
     name: mandatory - the name for the field
     type: mandatory - the name of a previously defined type from the <types> section
     indexed: true if this field should be indexed (searchable or sortable)
     stored: true if this field should be retrievable
     compressed: [false] if this field should be stored using gzip compression
       (this will only apply if the field type is compressable; among
       the standard field types, only TextField and StrField are)
     multiValued: true if this field may contain multiple values per document
     omitNorms: (expert) set to true to omit the norms associated with
       this field (this disables length normalization and index-time
       boosting for the field, and saves some memory).  Only full-text
       fields or fields that need an index-time boost need norms.
     termVectors: [false] set to true to store the term vector for a given field.
       When using MoreLikeThis, fields used for similarity should be stored for 
       best performance.
   -->

   <field name="id" type="string" indexed="true" stored="true" required="true"/> 

   <field name="title" type="text" indexed="true" stored="true" required="true"/>
   <field name="titleSort" type="string" indexed="true" stored="false"/>
   <field name="titleAutocomplete" type="textAutocomplete" indexed="true" stored="false"/>
   <field name="titleSubMatch" type="textSubMatch" indexed="true" stored="false"/>
   
   <field name="description" type="text" indexed="true" stored="true" omitNorms="true"/>
   <field name="comment" type="text" indexed="true" stored="true" omitNorms="true"/>

   <field name="reporterSubMatch" type="textSubMatch" indexed="true" stored="false" omitNorms="true"/>
   <field name="assigneeSubMatch" type="textSubMatch" indexed="true" stored="false" omitNorms="true"/>
   <field name="commenterSubMatch" type="textSubMatch" indexed="true" stored="false" multiValued="true" omitNorms="true"/>

   <field name="votes" type="sint" indexed="true" stored="true" omitNorms="true"/>
   <field name="ccCount" type="sint" indexed="true" stored="true" omitNorms="true"/>
   <field name="commentsCount" type="sint" indexed="true" stored="true" omitNorms="true"/>
   
   <field name="created" type="date" indexed="true" stored="true"  multiValued="false"/>

   <!-- catchall field, containing all other searchable text fields (implemented
        via copyField further on in this schema  -->
   <field name="text" type="text" indexed="true" stored="false" multiValued="true" omitNorms="true"/>

   <field name="timestamp" type="date" indexed="true" stored="true" default="NOW" multiValued="false"/>
   
   <dynamicField name="*_i"  type="sint"    indexed="true"  stored="true" multiValued="true"/>
   <dynamicField name="*_s"  type="string"  indexed="true"  stored="true" multiValued="true"/>
   <dynamicField name="*_l"  type="slong"   indexed="true"  stored="true" multiValued="true"/>
   <dynamicField name="*_t"  type="text"    indexed="true"  stored="true" multiValued="true"/>
   <dynamicField name="*_b"  type="boolean" indexed="true"  stored="true" multiValued="true"/>
   <dynamicField name="*_f"  type="sfloat"  indexed="true"  stored="true" multiValued="true"/>
   <dynamicField name="*_d"  type="sdouble" indexed="true"  stored="true" multiValued="true"/>
   <dynamicField name="*_dt" type="date"    indexed="true"  stored="true" multiValued="true"/>

   <dynamicField name="*_facet"  type="string" indexed="true" stored="false" multiValued="true" omitNorms="true"/>

   <dynamicField name="*" type="text" indexed="true" stored="true" multiValued="true"/>
   
 </fields>

 <uniqueKey>id</uniqueKey>
 <defaultSearchField>text</defaultSearchField>
 <solrQueryParser defaultOperator="OR"/>

   <copyField source="id" dest="sku"/>

   <copyField source="title" dest="text"/>
   <copyField source="title" dest="titleSort"/>
   <copyField source="title" dest="titleAutocomplete"/>
   <copyField source="title" dest="titleSubMatch"/>
 
   <copyField source="reporter" dest="text"/>
   <copyField source="reporter" dest="reporterSubMatch"/>

   <copyField source="assignee" dest="text"/>
   <copyField source="assignee" dest="assigneeSubMatch"/>

   <copyField source="commenter" dest="text"/>
   <copyField source="commenter" dest="commenterSubMatch"/>

   <copyField source="classification" dest="classification_facet"/>
   <copyField source="product" dest="product_facet"/>
   <copyField source="component" dest="component_facet"/>
   <copyField source="keywords" dest="keywords_facet"/>
   <copyField source="tags" dest="tags_facet"/>
   <copyField source="status" dest="status_facet"/>
   <copyField source="resolution" dest="resolution_facet"/>
   <copyField source="targetMilestone" dest="targetMilestone_facet"/>
   <copyField source="version" dest="version_facet"/>
   <copyField source="statusWhiteboard" dest="statusWhiteboard_facet"/>
   <copyField source="priority" dest="priority_facet"/>
   <copyField source="severity" dest="severity_facet"/>
   <copyField source="hardware" dest="hardware_facet"/>
   <copyField source="os" dest="os_facet"/>
   <copyField source="assignee" dest="assignee_facet"/>
   <copyField source="reporter" dest="reporter_facet"/>
   <copyField source="cc" dest="cc_facet"/>
   <copyField source="commenter" dest="commenter_facet"/>

   <copyField dest="text" source="keyword"/>
   <copyField dest="text" source="product" />
   <copyField dest="text" source="component" />
   <copyField dest="text" source="classification" />
   <copyField dest="text" source="description" />
   <copyField dest="text" source="comment" />

</schema>
